{"ast":null,"code":"import { createStore } from \"vuex\";\nimport { formatGetAllDevisApiData } from \"../helpers/api\";\n\nconst modalActions = ({\n  state\n}, payload, showVariable) => {\n  if (payload.data) {\n    state.item = { ...payload.data\n    };\n  }\n\n  if (payload.status) return state[showVariable] = payload.status;\n\n  if (payload.target) {\n    if (!payload.target.closest(\".modale\") || payload.target.id == \"close-btn\") state[showVariable] = false;\n  } else state[showVariable] = false;\n};\n\nexport default createStore({\n  state: () => ({\n    //data\n    revele: false,\n    pdfShow: false,\n    item: {},\n    Clients: [],\n    User: [],\n    Devis: [],\n    EditDevis: {},\n    link: {},\n    status_table: \"\"\n  }),\n  mutations: {},\n  actions: {\n    toggleModal({\n      state\n    }, payload) {\n      modalActions({\n        state\n      }, payload, \"revele\");\n    },\n\n    togglePdfModal({\n      state\n    }, payload) {\n      modalActions({\n        state\n      }, payload, \"pdfShow\");\n    },\n\n    async getClients({\n      state\n    }) {\n      let res = await fetch(`${process.env.VUE_APP_ROOT_API}/clients`);\n      let data = await res.json();\n      state.Clients = data;\n    },\n\n    //   state.Clients = data[0].clients;\n    async getUser({\n      state\n    }) {\n      let res = await fetch(`${process.env.VUE_APP_ROOT_API}/users`);\n      let data = await res.json();\n      state.User = data;\n    },\n\n    async getDevis({\n      state\n    }, payload) {\n      let res = await fetch(`${process.env.VUE_APP_ROOT_API}/devis`);\n      let data = await res.json();\n      state.Devis = formatGetAllDevisApiData(data).reverse();\n\n      if (payload) {\n        state.EditDevis = { ...state.Devis.find(el => el.uuid == payload.uuid)\n        };\n      }\n    }\n\n  }\n});","map":{"version":3,"names":["createStore","formatGetAllDevisApiData","modalActions","state","payload","showVariable","data","item","status","target","closest","id","revele","pdfShow","Clients","User","Devis","EditDevis","link","status_table","mutations","actions","toggleModal","togglePdfModal","getClients","res","fetch","process","env","VUE_APP_ROOT_API","json","getUser","getDevis","reverse","find","el","uuid"],"sources":["/Users/feyraf/Desktop/projet Hkos/hkos-project-front/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport { formatGetAllDevisApiData } from \"../helpers/api\";\n\nconst modalActions = ({ state }, payload, showVariable) => {\n  if (payload.data) {\n    state.item = { ...payload.data };\n  }\n\n  if (payload.status) return (state[showVariable] = payload.status);\n\n  if (payload.target) {\n    if (!payload.target.closest(\".modale\") || payload.target.id == \"close-btn\")\n      state[showVariable] = false;\n  } else state[showVariable] = false;\n};\n\nexport default createStore({\n  state: () => ({\n    //data\n    revele: false,\n    pdfShow: false,\n    item: {},\n    Clients: [],\n    User: [],\n    Devis: [],\n    EditDevis: {},\n    link: {},\n    status_table: \"\",\n  }),\n  mutations: {},\n  actions: {\n    toggleModal({ state }, payload) {\n      modalActions({ state }, payload, \"revele\");\n    },\n    togglePdfModal({ state }, payload) {\n      modalActions({ state }, payload, \"pdfShow\");\n    },\n\n    async getClients({ state }) {\n      let res = await fetch(`${process.env.VUE_APP_ROOT_API}/clients`);\n      let data = await res.json();\n      state.Clients = data;\n    },\n    //   state.Clients = data[0].clients;\n\n    async getUser({ state }) {\n      let res = await fetch(`${process.env.VUE_APP_ROOT_API}/users`);\n      let data = await res.json();\n      state.User = data;\n    },\n\n    async getDevis({ state }, payload) {\n      let res = await fetch(`${process.env.VUE_APP_ROOT_API}/devis`);\n      let data = await res.json();\n      state.Devis = formatGetAllDevisApiData(data).reverse();\n      if (payload) {\n        state.EditDevis = {\n          ...state.Devis.find((el) => el.uuid == payload.uuid),\n        };\n      }\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}